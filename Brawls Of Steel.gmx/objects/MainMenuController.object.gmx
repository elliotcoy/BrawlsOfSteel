<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logan's Code
/*
globalvar menuButtons;
menuButtons = 0;

globalvar selectedMenuButton;
selectedMenuButton = 0;
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
globalvar main_menu;
main_menu = 0.0;//x.y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Logan's Code

/*
for(var i=0;i&lt;array_length_1d(menuButtons);i++)
{
    if(i != selectedMenuButton)
    {
        menuButtons[i].state = 0;
    }
    else
    {
        menuButtons[i].state = 1;
    }
}

//LEFT
if(left_check_pressed())
{

}
//RIGHT
if(right_check_pressed())
{

}

//UP
if(up_check_pressed())
{
    audio_play_sound(MenuNavigationSound,1,false);
    selectedMenuButton--;
    if(selectedMenuButton &lt; 0)
    {
        selectedMenuButton = array_length_1d(menuButtons) - 1;
    }
}

//DOWN
if(down_check_pressed())
{
    audio_play_sound(MenuNavigationSound,1,false);
    selectedMenuButton++
    if(selectedMenuButton &gt;= array_length_1d(menuButtons))
    {
        selectedMenuButton = 0;
    }
}

//ENTER
if(jump_check_pressed())
{
    audio_play_sound(MenuConfirmationSound,1,false);
    menuButtons[selectedMenuButton].alarm[1] = true;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Main Menu Buttons Code

//Input Checking
 //Move down selection (++)
if(down_check_pressed())
{   if((main_menu*10) mod 2){main_menu -= 0.1;}else{main_menu += 0.1;}// Math stuff, switch T/F for tens decimal
}//Move up selection (--)
if(up_check_pressed())
{   if((main_menu*10) mod 2){main_menu -= 0.1;}else{main_menu += 0.1;}// Math stuff, switch T/F for tens decimal
}//Move right selection (+)
if(right_check_pressed())
{   if(main_menu mod 2 &lt; 1){main_menu += 1;}else{main_menu -= 1;}// Math stuff, switch T/F, ignores tens decimal
}//Move left selection (-)
if(left_check_pressed())
{   if(main_menu mod 2 &lt; 1){main_menu += 1;}else{main_menu -= 1;}// Math stuff, switch T/F, ignores tens decimal
}

/***************************************************
  START MENU OPTIONS
 ***************************************************/

if(jump_check() or boost_check())
{   switch(main_menu)
 {
    case 0.0: room_goto(OverMap)      break;  //Single Player
    case 1.0: room_goto(MPSettingsRoom) break;  //Multiplayer
    case 0.1: room_goto(creditsNew)   break;  //Credits
    case 1.1: game_end()              break;  //Quit
 }
}

/***************************************************
  END MENU OPTIONS
 ***************************************************/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
